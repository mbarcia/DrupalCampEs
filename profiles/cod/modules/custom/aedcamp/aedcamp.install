<?php

/**
 * @file
 *  Adds dependencies and other install tasks for the AED customizations.
 */

/**
 * Implements hook_install().
 */
function aedcamp_install() {

  // Rebuild menus before create new ones.
  menu_rebuild();

  // Apply updates.
  $updates = array(7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012);
  foreach ($updates as $update) {
    call_user_func('aedcamp_update_' . $update);
  }

  // Clear menu caches.
  menu_cache_clear_all();
}

/**
 * Implements hook_update_7001().
 *  Enables the Commerce modules.
 */
function aedcamp_update_7001() {
  $modules = array(
    'commerce',
    'commerce_cart',
    'commerce_checkout',
    'commerce_customer',
    'commerce_line_item',
    'commerce_order',
    'commerce_payment',
    'commerce_price',
    'commerce_product',
  );
  module_enable($modules);
}

/**
 * Implements hook_update_7002().
 *  Adds commerce paypal as payment method and enables CODs paid events.
 */
function aedcamp_update_7002() {
  $modules = array(
    'commerce_paypal',
    'cod_paid_events',
  );
  module_enable($modules);
}

/**
 * Implements hook_update_7003().
 *  Deletes default conference and creates a new one.
 */
function aedcamp_update_7003() {
  node_delete(1);
  $node = new StdClass();
  $node->type = 'event';
  $node->title = 'DrupalCamp Spain 2015';
  $node->language = 'en';
  $node->body['en'][] = array(
    'value' => 'The DrupalCamp Spain is an event held every year in a different city of Spain. This year will be in Jerez.',
    'summary' => '',
    'format' => '',
  );
  $node->field_dates[LANGUAGE_NONE][] = array(
    'value' => 1432285200,
    'value2' => 1432486800,
    'timezone' => 'Europe/Madrid',
    'offset' => 3600,
    'offset2' => 3600,
    'timezone_db' => 'Europe/Madrid',
    'date_type' => 'datestamp',
  );
  $node->path = array('alias' => 'drupalcamp-spain-2015', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Set as default event, to allow user registration without select the event.
  $flag = flag_get_flag('default_event');
  $flag->flag('flag', $node->nid, user_load(1), TRUE);

}

/**
 * Implements hook_update_7004().
 * Creates new node page for speaker guideline and enable cod_session.
 */
function aedcamp_update_7004() {
  // Activate module cod_sessions
  $modules = array(
    'cod_session',
  );
  module_enable($modules);

  // Add Sessions to main-menu.
  // TODO: Add the correct path to the list
  $item = array(
    'link_path' => 'node/2',
    'link_title' => 'Sessions',
    'menu_name' => 'main-menu',
    'weight' => 0,
    'language' => 'en',
    'customized' => 1,
    'expanded' => 1,
  );
  $plid_info = menu_link_save($item);

  // Create node for speaker guideline
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Speakers guideline';
  $node->language = 'en';
  $node->path = array('alias' => 'sessions/speakers-guideline', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Add Speaker guideline node to main-menu.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Speakers guideline',
    'menu_name' => 'main-menu',
    'weight' => 0,
    'plid' => $plid_info,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Add Featured Speaker to main-menu
  // TODO: Add the correct path to the list
  $item = array(
    'link_path' => 'node/2/speakers',
    'link_title' => 'Featured speakers',
    'menu_name' => 'main-menu',
    'weight' => 0,
    'plid' => $plid_info,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Add Speaker to main-menu
  // TODO: Add the correct path to the list
  $item = array(
    'link_path' => 'node/2/speakers',
    'link_title' => 'Speakers',
    'menu_name' => 'main-menu',
    'weight' => 0,
    'plid' => $plid_info,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Add Proposal (aka session form) to main-menu
  $item = array(
    'link_path' => 'node/add/session',
    'link_title' => 'Proposal',
    'menu_name' => 'main-menu',
    'weight' => 0,
    'plid' => $plid_info,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);
}

/**
 * Implements hook_update_7005().
 * Creates new nodes page for the Information section.
 */
function aedcamp_update_7005() {

  // Create node for information page
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Information';
  $node->language = 'en';
  $node->path = array('alias' => 'info', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Add node Information to main-menu
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Information',
    'menu_name' => 'main-menu',
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
    'expanded' => 1,
  );
  $plid_info = menu_link_save($item);

  // Create node for Accommodations page
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Accommodations';
  $node->language = 'en';
  $node->path = array('alias' => 'info/accommodations', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Add node Accommodations to main-menu
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Accommodations',
    'menu_name' => 'main-menu',
    'plid' => $plid_info,
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create node for About the city page
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'About the city';
  $node->language = 'en';
  $node->path = array('alias' => 'info/about-the-city', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Add node About the city to main-menu
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'About the city',
    'menu_name' => 'main-menu',
    'plid' => $plid_info,
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create node for How to get there page
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'How to get there';
  $node->language = 'en';
  $node->path = array('alias' => 'info/how-to-get-there', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Add node About the city to main-menu
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'How to get there',
    'menu_name' => 'main-menu',
    'plid' => $plid_info,
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create node for Transportation page
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Transportation';
  $node->language = 'en';
  $node->path = array('alias' => 'info/transportation', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Create Transportation menu item.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Transportation',
    'menu_name' => 'main-menu',
    'plid' => $plid_info,
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

}

/**
 * Implements hook_update_7006().
 * Set the default theme.
 */
function aedcamp_update_7006() {
  variable_set('theme_default', 'drupalcamp');
}

/**
 * Implements hook_update_7007().
 * Creates the news section
 */
function aedcamp_update_7007() {
  // Activate module cod_news
  $modules = array(
    'cod_news',
  );
  module_enable($modules);
//  We don't need this block because is added in a panel at home page.
//   Add node About the city to main-menu.
//   To see this link will needed to disable the default News menu item.
//
//  $item = array(
//    'link_path' => 'news/2',
//    'link_title' => 'News',
//    'menu_name' => 'main-menu',
//    'weight' => 1,
//    'language' => 'en',
//    'customized' => 1,
//  );
//  menu_link_save($item);
}

/**
 * Implements hook_update_7008().
 *  Enables the less module.
 */
function aedcamp_update_7008() {
  $modules = array(
    'less',
  );
  module_enable($modules);
  variable_set('less_engine', 'less.php');
  variable_set('less_devel', 1);
  variable_set('less_source_maps', 1);
}

/**
 * Implements hook_update_7009()
 */
function aedcamp_update_7009() {
  //Create role 'featured speaker'
  $featured_speaker = new stdClass();
  $featured_speaker->name = 'featured speaker';
  user_role_save($featured_speaker);
}

/**
 * Implements hook_update_7010()
 */
function aedcamp_update_7010() {
  //activate module aedcamp_home
  $modules = array(
    'aedcamp_home',
  );
  module_enable($modules);
  variable_set('site_frontpage', 'home');
}

/**
 * Implements hook_update_7011()
 */
function aedcamp_update_7011() {

  //activate module aedcamp_image_block with the bean block type images.
  $modules = array(
    'aedcamp_image_block',
  );
  module_enable($modules);

  // Create block for Renfe.
  $bean = bean_create(array('type' => 'images'));
  $bean->label = 'Renfe Promotion';
  $bean->delta = 'renfe_promotion';
  $bean->view_mode = 'default';
  $bean->save();

  // Create block for Iberia.
  $bean = bean_create(array('type' => 'images'));
  $bean->label = 'Iberia Promotion';
  $bean->delta = 'iberia_promotion';
  $bean->view_mode = 'default';
  $bean->save();
}

/**
 * Implements hook_update_7012()
 */
function aedcamp_update_7012() {

  // Activate module cod_sponsors.
  $modules = array(
    'cod_sponsors',
  );
  module_enable($modules);

  // Create sponsors categories a.k.a terms.
  // TODO: Is not working (the vocabulary is not being loaded).
  $vocabulary = taxonomy_vocabulary_machine_name_load('sponsorship_level');

  // Create gold term.
  $term = new StdClass();
  $term->name = 'Gold';
  $term->vocabulary_machine_name = 'gold';
  $term->description = '';
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  // Create gold term.
  $term = new StdClass();
  $term->name = 'Silver';
  $term->vocabulary_machine_name = 'silver';
  $term->description = '';
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  // Create bronze term.
  $term = new StdClass();
  $term->name = 'Bronze';
  $term->vocabulary_machine_name = 'bronze';
  $term->description = '';
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  // Activate module aedcamp_sponsors.
  $modules = array(
    'aedcamp_sponsors',
  );
  module_enable($modules);
}

/**
 * Implements Hook_update_7013
 */
function aedcamp_update_7013() {

  // Create Sprint node page.
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Sprints';
  $node->language = 'en';
  $node->path = array('alias' => 'info/sprints', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Create Sprint menu item.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Sprints',
    'menu_name' => 'main-menu',
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create Business day node page.
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Business day';
  $node->language = 'en';
  $node->path = array('alias' => 'info/business-day', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Create Business menu item.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Business Day',
    'menu_name' => 'main-menu',
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create Training node page.
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Training';
  $node->language = 'en';
  $node->path = array('alias' => 'info/training', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Create Training menu item.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Training',
    'menu_name' => 'main-menu',
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

  // Create Attendees node page.
  $node = new StdClass();
  $node->type = 'page';
  $node->title = 'Attendees';
  $node->language = 'en';
  $node->path = array('alias' => 'info/Attendees', 'pathauto' => FALSE);
  $node->uid = 1;
  node_save($node);

  // Create Attendees menu item.
  $item = array(
    'link_path' => 'node/' . $node->nid,
    'link_title' => 'Attendees',
    'menu_name' => 'main-menu',
    'weight' => 1,
    'language' => 'en',
    'customized' => 1,
  );
  menu_link_save($item);

}



